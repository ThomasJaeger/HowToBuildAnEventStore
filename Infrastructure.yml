AWSTemplateFormatVersion: "2010-09-09"
Description: Required AWS resources for "How to build an event store"

Parameters:
    Env:
        Type: String
        Default: dev
        AllowedValues: 
            -   dev
            -   beta
            -   prod
            -   feature
        Description: The deployment environment

Resources:
    # **********************************************************************
    # IAM - Security
    # **********************************************************************
    iamLambdaFunctionExecution:
        Type: AWS::IAM::Role
        Properties:
            RoleName: lambda-function-execution
            AssumeRolePolicyDocument: 
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            Service:
                                - lambda.amazonaws.com
                        Action: 
                            - sts:AssumeRole
            Policies: 
                -   PolicyName: LambdaFunctionExecutionPolicy
                    PolicyDocument:
                        Version: 2012-10-17
                        Statement:
                            -   Action: 
                                    - "logs:*"
                                    - "cloudwatch:*"
                                    - "lambda:*"
                                    - "sns:*"
                                    - "dynamodb:*"
                                Effect: Allow
                                Resource: "*"

    # **********************************************************************
    # S3 - Buckets we need
    # **********************************************************************
    s3DeploymentArtifacts:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: howtobuildaneventstore-deployment-artifacts

    # **********************************************************************
    # DynamoDB EventStore Table
    # **********************************************************************
    dynamoTblEventStore:
        Type: AWS::DynamoDB::Table
        Properties:
            AttributeDefinitions:
                - AttributeName: PK
                  AttributeType: S
                - AttributeName: SK
                  AttributeType: N
                - AttributeName: Snapshot
                  AttributeType: N
            KeySchema:
                - AttributeName: PK
                  KeyType: HASH
                - AttributeName: SK
                  KeyType: RANGE
            ProvisionedThroughput: 
                ReadCapacityUnits: 5
                WriteCapacityUnits: 5
            StreamSpecification:
                StreamViewType: NEW_IMAGE
            TableName: !Sub ${Env}-${AWS::Region}-EventStore  # Make sure exports are updated if changed here
            GlobalSecondaryIndexes: 
                - 
                    IndexName: "snapshotGSI"
                    KeySchema: 
                        - 
                            AttributeName: "PK"
                            KeyType: "HASH"
                        - 
                            AttributeName: "Snapshot"
                            KeyType: "RANGE"
                    Projection: 
                        #NonKeyAttributes: 
                        #    - "Snapshot"
                        ProjectionType: "KEYS_ONLY"
                    ProvisionedThroughput: 
                        ReadCapacityUnits: "5"
                        WriteCapacityUnits: "5"
            Tags:
                -   Key: environment
                    Value: !Ref Env

    # **********************************************************************
    # SNS - Domain Events being broadcasted
    # **********************************************************************
    CustomerCharged:
        Type: AWS::SNS::Topic
        Properties: 
            DisplayName: CustomerCharged
            TopicName: CustomerCharged

    CustomerSnapshotCreated:
        Type: AWS::SNS::Topic
        Properties: 
            DisplayName: CustomerSnapshotCreated
            TopicName: CustomerSnapshotCreated

    ProblemOccured:
        Type: AWS::SNS::Topic
        Properties: 
            DisplayName: ProblemOccured
            TopicName: ProblemOccured

    SignedUp:
        Type: AWS::SNS::Topic
        Properties: 
            DisplayName: SignedUp
            TopicName: SignedUp

# **********************************************************************
# Exports to be used by other CloudFormation scripts
# **********************************************************************
Outputs:
    dynamoTblEventStoreChangeSetsStreamArn:
        Description: EventStore Table Stream Arn
        Value: !GetAtt dynamoTblEventStore.StreamArn
        Export:
            Name: global-eventstore-table-stream-arn

    iamLambdaFunctionExecution:
        Description: Lambda Function Execution Arn
        Value: !GetAtt iamLambdaFunctionExecution.Arn
        Export:
            Name: global-lambda-function-execution-arn
